--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local antileave = Instance.new("TextButton")
local skybox = Instance.new("TextButton")
local jumpscare = Instance.new("TextButton")
local skyboxf3x = Instance.new("TextButton")
local decalspamf3 = Instance.new("TextButton")
local flood = Instance.new("TextButton")
local notagui = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 5
Frame.Position = UDim2.new(0.16323024, 0, 0.20390071, 0)
Frame.Size = UDim2.new(0, 584, 0, 315)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 4
TextLabel.Size = UDim2.new(0, 584, 0, 50)
TextLabel.Font = Enum.Font.Michroma
TextLabel.Text = "G00fyGUI"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 30.000

antileave.Name = "antileave"
antileave.Parent = Frame
antileave.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
antileave.BorderColor3 = Color3.fromRGB(0, 0, 0)
antileave.BorderSizePixel = 5
antileave.Position = UDim2.new(0, 0, 0.27619049, 0)
antileave.Size = UDim2.new(0, 200, 0, 50)
antileave.Font = Enum.Font.Michroma
antileave.Text = "Insert Anti-Leave {Client}"
antileave.TextColor3 = Color3.fromRGB(0, 0, 0)
antileave.TextSize = 14.000
antileave.MouseButton1Down:Connect(function()
loadstring(game:HttpGet("https://pastebin.com/raw/GfeXSwbm"))()
end)
skybox.Name = "skybox"
skybox.Parent = Frame
skybox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
skybox.BorderColor3 = Color3.fromRGB(0, 0, 0)
skybox.BorderSizePixel = 5
skybox.Position = UDim2.new(0.657534242, 0, 0.27619049, 0)
skybox.Size = UDim2.new(0, 200, 0, 50)
skybox.Font = Enum.Font.Michroma
skybox.Text = "Skybox"
skybox.TextColor3 = Color3.fromRGB(0, 0, 0)
skybox.TextSize = 14.000

jumpscare.Name = "jumpscare"
jumpscare.Parent = Frame
jumpscare.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
jumpscare.BorderColor3 = Color3.fromRGB(0, 0, 0)
jumpscare.BorderSizePixel = 5
jumpscare.Position = UDim2.new(0.657534242, 0, 0.526984155, 0)
jumpscare.Size = UDim2.new(0, 200, 0, 50)
jumpscare.Font = Enum.Font.Michroma
jumpscare.Text = "jumpscare"
jumpscare.TextColor3 = Color3.fromRGB(0, 0, 0)
jumpscare.TextSize = 14.000

skyboxf3x.Name = "skyboxf3x"
skyboxf3x.Parent = Frame
skyboxf3x.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
skyboxf3x.BorderColor3 = Color3.fromRGB(0, 0, 0)
skyboxf3x.BorderSizePixel = 5
skyboxf3x.Position = UDim2.new(0, 0, 0.526984155, 0)
skyboxf3x.Size = UDim2.new(0, 200, 0, 50)
skyboxf3x.Font = Enum.Font.Michroma
skyboxf3x.Text = "Skybox {F3X}"
skyboxf3x.TextColor3 = Color3.fromRGB(0, 0, 0)
skyboxf3x.TextSize = 14.000

decalspamf3.Name = "decalspamf3"
decalspamf3.Parent = Frame
decalspamf3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
decalspamf3.BorderColor3 = Color3.fromRGB(0, 0, 0)
decalspamf3.BorderSizePixel = 5
decalspamf3.Position = UDim2.new(0, 0, 0.780952394, 0)
decalspamf3.Size = UDim2.new(0, 200, 0, 50)
decalspamf3.Font = Enum.Font.Michroma
decalspamf3.Text = "decalspam {F3X}"
decalspamf3.TextColor3 = Color3.fromRGB(0, 0, 0)
decalspamf3.TextSize = 14.000

flood.Name = "flood"
flood.Parent = Frame
flood.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
flood.BorderColor3 = Color3.fromRGB(0, 0, 0)
flood.BorderSizePixel = 5
flood.Position = UDim2.new(0.657534242, 0, 0.780952394, 0)
flood.Size = UDim2.new(0, 200, 0, 50)
flood.Font = Enum.Font.Michroma
flood.Text = "flood"
flood.TextColor3 = Color3.fromRGB(0, 0, 0)
flood.TextSize = 14.000

notagui.Name = "notagui"
notagui.Parent = Frame
notagui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
notagui.BorderColor3 = Color3.fromRGB(0, 0, 0)
notagui.BorderSizePixel = 5
notagui.Position = UDim2.new(0.371575356, 0, 0.171428576, 0)
notagui.Size = UDim2.new(0, 149, 0, 33)
notagui.Font = Enum.Font.Michroma
notagui.Text = "N0taGUI"
notagui.TextColor3 = Color3.fromRGB(0, 0, 0)
notagui.TextSize = 14.000
notagui.MouseButton1Down:Connect(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/pedroluckygod/Yes/main/UNDETECTABLE%20GUI%20V7"))()
end)
-- Scripts:

local function OHSBQTO_fake_script() -- skybox.Script 
	local script = Instance.new('Script', skybox)

	function click()
		s = Instance.new("Sky")
		s.Name = "Sky"
		s.Parent = game.Lighting
		s.SkyboxBk = "http://www.roblox.com/asset/?id=104144359228055"--the id is here 
		s.SkyboxDn = "http://www.roblox.com/asset/?id=104144359228055"--the id is here 
		s.SkyboxFt = "http://www.roblox.com/asset/?id=104144359228055"--the id is here
		s.SkyboxLf = "http://www.roblox.com/asset/?id=104144359228055"--the id is here 
		s.SkyboxRt = "http://www.roblox.com/asset/?id=104144359228055"--the id is here 
		s.SkyboxUp = "http://www.roblox.com/asset/?id=104144359228055"--the id is here 
		game.Lighting.TimeOfDay = 12
	end
	
	script.Parent.MouseButton1Down:connect(click)
end
coroutine.wrap(OHSBQTO_fake_script)()
local function WTRZ_fake_script() -- jumpscare.Script 
	local script = Instance.new('Script', jumpscare)

	script.Parent.MouseButton1Click:Connect(function()
		for i,v in pairs(game.Players:GetPlayers()) do
			if v.Name ~= me and not v.PlayerGui:FindFirstChild("Screamer") and v:FindFirstChild("PlayerGui") then
				spawn(function()
					local newgui = Instance.new("ScreenGui",v.PlayerGui)
					newgui.Name = "Screamer"
					local newimage = Instance.new("ImageLabel",newgui)
					newimage.Image = "http://www.roblox.com/asset/?id=104144359228055"
					newimage.Size = UDim2.new(1,1,1,1)
					local s = Instance.new("Sound",newgui)
					s.SoundId = "rbxassetid://6018028320"
					s.Volume = math.huge
					s.Looped = false
					s:Play()
					print("Screamed "..v.Name)
					while wait(9) do
	
						newimage.Parent:Destroy()
	
					end
				end)
			end
		end
	end)
end
coroutine.wrap(WTRZ_fake_script)()
local function VYEAJ_fake_script() -- skyboxf3x.LocalScript 
	local script = Instance.new('LocalScript', skyboxf3x)

	script.Parent.MouseButton1Down:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("104144359228055")
	end)
	
end
coroutine.wrap(VYEAJ_fake_script)()
local function XKUWJ_fake_script() -- decalspamf3.LocalScript 
	local script = Instance.new('LocalScript', decalspamf3)

	script.Parent.MouseButton1Down:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("104144359228055")
	end)
end
coroutine.wrap(XKUWJ_fake_script)()
local function YRXSR_fake_script() -- Frame.DragScript 
	local script = Instance.new('LocalScript', Frame)

	--Not made by me, check out this video: https://www.youtube.com/watch?v=z25nyNBG7Js&t=22s
	--Put this inside of your Frame and configure the speed if you would like.
	--Enjoy! Credits go to: https://www.youtube.com/watch?v=z25nyNBG7Js&t=22s
	
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
end
coroutine.wrap(YRXSR_fake_script)()
local function GZGUF_fake_script() -- flood.Script 
	local script = Instance.new('Script', flood)

	function click()
		Game.Workspace.Terrain:SetCells(Region3int16.new(Vector3int16.new(-100,-100,-100), Vector3int16.new(100,100,100)), 17, "Solid", "X")	
	end
	
	script.Parent.MouseButton1Down:connect(click)
end
coroutine.wrap(GZGUF_fake_script)()
